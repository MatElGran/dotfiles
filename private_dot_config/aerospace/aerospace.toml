# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders active_color=0xffe1a314 inactive_color=0xff494d64 width=10.0'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 20

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']


# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# FIXME: seems to mess with existing windows, add a test of absence before opening
# exec-on-workspace-change = ['bin/bash', '-c', 'if [[ $AEROSPACE_FOCUSED_WORKSPACE == B ]]; then open -a "Firefox Developer Edition"; fi']

[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       5
outer.bottom =     5
outer.top =        5
outer.right =      5

# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

alt-space = 'mode active'
alt-tab = 'workspace-back-and-forth'

[mode.layout.binding]
esc = 'mode main'

t = 'layout tiles horizontal vertical'
a = 'layout accordion horizontal vertical'
f = 'layout floating tiling'

[mode.service.binding]
esc = ['reload-config', 'mode main']

r = ['flatten-workspace-tree', 'mode main'] # reset layout
backspace = ['close-all-windows-but-current', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']

[mode.position.binding]
esc = 'mode main'

d = 'move left'
h = 'move down'
t = 'move up'
n = 'move right'

shift-d = 'join-with left'
shift-h = 'join-with down'
shift-t = 'join-with up'
shift-n = 'join-with right'

rightSquareBracket = 'move-workspace-to-monitor --wrap-around next'
leftSquareBracket = 'move-workspace-to-monitor --wrap-around prev'

[mode.active.binding]
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
#   tell application "iTerm2"
#     set newWindow to (create window with default profile)
#     tell current session of newWindow
#       set name to "Floating"
#     end tell
#     activate
#   end tell'
#   '''
# Modes routing
esc = 'mode main'

alt-space = 'mode locked'
alt-l = 'mode layout'
alt-s = 'mode service'
alt-p = 'mode position'

# Window navigation
d = ['focus left', 'mode main']
h = ['focus down', 'mode main']
t = ['focus up', 'mode main']
n = ['focus right', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# Browser
b = ['workspace B', 'mode main']
shift-b = ['move-node-to-workspace B', 'mode main']
alt-shift-b = ['move-node-to-workspace B', 'workspace B', 'mode main']

# Editor
e = ['workspace E', 'mode main']
shift-e = ['move-node-to-workspace E', 'mode main']
alt-shift-e = ['move-node-to-workspace E', 'workspace E', 'mode main']

# Logs and consoles (IO)
i = ['workspace I', 'mode main']
shift-i = ['move-node-to-workspace I', 'mode main']
alt-shift-i = ['move-node-to-workspace I', 'workspace I', 'mode main']

# Messaging
m = ['workspace M', 'mode main']
shift-m = ['move-node-to-workspace M', 'mode main']
alt-shift-m = ['move-node-to-workspace M', 'workspace M', 'mode main']

1 = ['workspace 1', 'mode main']
2 = ['workspace 2', 'mode main']
3 = ['workspace 3', 'mode main']
4 = ['workspace 4', 'mode main']
5 = ['workspace 5', 'mode main']
6 = ['workspace 6', 'mode main']
7 = ['workspace 7', 'mode main']
8 = ['workspace 8', 'mode main']
9 = ['workspace 9', 'mode main']
0 = ['workspace 0', 'mode main']

shift-1 = ['move-node-to-workspace 1', 'mode main']
shift-2 = ['move-node-to-workspace 2', 'mode main']
shift-3 = ['move-node-to-workspace 3', 'mode main']
shift-4 = ['move-node-to-workspace 4', 'mode main']
shift-5 = ['move-node-to-workspace 5', 'mode main']
shift-6 = ['move-node-to-workspace 6', 'mode main']
shift-7 = ['move-node-to-workspace 7', 'mode main']
shift-8 = ['move-node-to-workspace 8', 'mode main']
shift-9 = ['move-node-to-workspace 9', 'mode main']
shift-0 = ['move-node-to-workspace 0', 'mode main']

[mode.locked.binding]
esc = 'mode main'

alt-space = 'mode active'
alt-l = 'mode layout'
alt-s = 'mode service'
alt-p = 'mode position'

d = 'focus left'
h = 'focus down'
t = 'focus up'
n = 'focus right'

# Browser
b = 'workspace B'
shift-b = 'move-node-to-workspace B'
alt-shift-b = ['move-node-to-workspace B', 'workspace B']

# Editor
e = 'workspace E'
shift-e = 'move-node-to-workspace E'
alt-shift-e = ['move-node-to-workspace E', 'workspace E']

# Logs and consoles (IO)
i = 'workspace I'
shift-i = 'move-node-to-workspace I'
alt-shift-i = ['move-node-to-workspace I', 'workspace I']

# Messaging
m = 'workspace M'
shift-m = 'move-node-to-workspace M'
alt-shift-m = ['move-node-to-workspace M', 'workspace M']

1 = 'workspace 1'
2 = 'workspace 2'
3 = 'workspace 3'
4 = 'workspace 4'
5 = 'workspace 5'
6 = 'workspace 6'
7 = 'workspace 7'
8 = 'workspace 8'
9 = 'workspace 9'
0 = 'workspace 0'

shift-1 = 'move-node-to-workspace 1'
shift-2 = 'move-node-to-workspace 2'
shift-3 = 'move-node-to-workspace 3'
shift-4 = 'move-node-to-workspace 4'
shift-5 = 'move-node-to-workspace 5'
shift-6 = 'move-node-to-workspace 6'
shift-7 = 'move-node-to-workspace 7'
shift-8 = 'move-node-to-workspace 8'
shift-9 = 'move-node-to-workspace 9'
shift-0 = 'move-node-to-workspace 0'
